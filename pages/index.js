import React, { useEffect, useState } from "react";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import SkeletonCard from "../components/SkeletonCard";
import HotelCard from "../components/HotelCard";
import Header2 from "../components/Header2";
import TopHeader from "../components/topHeader";
import { fetchHotels } from "./api/api";

export const getStaticProps = async () => {
  const res = await fetch(
    "https://63b44f0d9f50390584ad1c20.mockapi.io/api/v1/hotels"
  );
  const data = await res.json();
  return {
    props: { hotels: data },
  };
};

export default function Home({ hotels }) {
  const [loading, setLoading] = useState(true);
  const [hotelData, setHotelData] = useState([]);
  const [page, setPage] = useState(1);
  const [pageSize] = useState(6);

  const handleScroll = () => {
    if (
      window.innerHeight + window.scrollY >= document.body.offsetHeight - 300
    ) {
      setLoading(true);
    }
  };

  useEffect(() => {
    const loadMoreHotels = async () => {
      const newData = await fetchHotels(page, pageSize);
      setHotelData((prevHotels) => [...prevHotels, ...newData]);
      setLoading(false);
      setPage(page + 1);
    };

    if (loading) {
      loadMoreHotels();
    }

    window.addEventListener("scroll", handleScroll);

    return () => {
      window.removeEventListener("scroll", handleScroll);
    };
  }, [loading, page, pageSize]);

  useEffect(() => {
    if (hotels) {
      setLoading(false);
    }
  }, [hotels]);

  return (
    <>
      <Head>
        <title>Hotel&Co</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <Header2 />
      <hr />
      <TopHeader />
      <main className="container mx-auto px-4 py-8">
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
          {loading ? (
            <SkeletonCard />
          ) : (
            hotelData.map((hotel, index) => (
              <HotelCard hotel={hotel} key={hotel.id} />
            ))
          )}
        </div>
      </main>
    </>
  );
}
